# Using Node as our preset enviroment (includes npm as well)
image: node:10.15.3

# Cache node_modules in between jobs
cache:
  paths:
  - node_modules/
# All stages of our pipeline! Ordered!
stages:
- build
# - test
- deploy

# in between stages, a global npm install is executed
before_script:
 - npm install

# the compile job, for the build stage, multiple jobs can exist within one stage
# If that is the case they are executed in parallel
compile:
  stage: build
  script:
   - npm run build
  artifacts:
    paths:
    - build

# Our test stage, install dev depencencies as extra script then run the test cases!
# test:
#   before_script:
#    - npm install --only-dev
#   stage: test
#   script:
#    - npm test

# Git Lab Pages Deploy
pages:
  stage: deploy
  script:
    - mkdir .public
    - cp -r ./build .public
    - mv .public public
    - ls
    - echo 'Gitlab Pages Deployment'
  # environment:
    # name: staging
    # url: https://staging.example.com
  artifacts:
    paths:
    - public
# Deploy only when the development branch
pages:
  stage: deploy
  script:
    - echo 'Development Deployment'
  # environment:
    # name: staging
    # url: https://staging.example.com
  artifacts:
    paths:
    - public
  only: ['development']

# Deploy only when on the master branch!
# The when property, specifies that this step will only be prepared but not triggered
# without our manual intervention
deply-master:
  stage: deploy
  script:
    - echo 'Production Deployment'
  # environment:
    # name: production
    # url: https://app.example.com
  artifacts:
    paths:
    - public
  when: manual
  only: ['master']
